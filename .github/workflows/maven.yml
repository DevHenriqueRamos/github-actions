# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Run tests
      run: mvn clean test -B
    
  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: java-project
        path: target/*.jar

  docker:
    needs: build
    uses: ./.github/workflows/Docker.yml
    secrets: inherit

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    environment: Docker
    steps:
      - uses: actions/checkout@v4

      - name: Config AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::329599629292:role/github-actions
          aws-region: 'us-west-2'

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 'latest'

      - name: Change directory to dev
        run: cd ./terraform/env/dev/

      - name: Init Terraform
        run: terraform init

      - name: Apply Terraform
        run: terraform apply -auto-approve -var="image_name=${{ vars.DOCKER_HUB_USERNAME }}/java-api:${{ github.ref_name }}"
